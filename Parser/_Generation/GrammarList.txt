start
	:	module_space
	;

module_space
	:	module_item module_space
	|	module_item
	;

module_item
	:	interface
	|	shader
	|	module
	;

interface
	:	declare lparen defargs rparen code
	|	keyword_graphic declare lparen defargs rparen code
	;

declare
	:	type identifier
	|	keyword_var identifier
	;

type
	: i_am_invalid_and_i_mess_up_ur_code // TODO: FINISH ME!
	;

module
	:	identifier lbrack module_space rbrack
	|	identifier lbrack rbrack
	;



// Example grammar
//	start: expr start | expr
//
//	expr: B | expr A

// Example lex
//	B A A B

// Example of Bottom-Up Shift-reduce Left to right rightmost-deriative parsing
//		Stack       Lookahead       Future          Action
//	B           | A             | AB        |   expr: B
//	expr        | A             | AB        |   Shift
//	expr A      | A             | B         |   expr: expr A
//	expr        | A             | B         |   Shift
//	expr A      | B             | ...       |   expr: expr A
//	expr        | B             | ...       |   Shift
//	expr B      | ...           | ...       |   expr: B
//	expr expr   | ...           | ...       |   start: expr
//	expr start  | ...           | ...       |   start: expr start
//	start       | ...           | ...       |   Accept

// Example of Top-Down âˆž token lookahead Left to right leftmost-derivative parsing
//		Stack                           Action
//	start                       |   start: expr start
//	expr start                  |   expr: expr A
//	expr A start                |   expr: expr A
//	expr A A start              |   expr: B
//	B A A start                 |   Pop
//	A A start                   |   Pop
//	A start                     |   Pop
//	start                       |   start: expr
//	expr                        |   expr: B
//	B                           |   Pop
//	...                         |   Accept
//	Note that since this grammar contains Left-recursive rules, LL parsers will
//	pee their pants. That's why the LL parser is said to have infinity tokens
//	of lookahead, that is ofc, impossible.
